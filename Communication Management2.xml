<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
	<declaration>// Global declarations
const int N_TRAINS = 2;

const int MUTE_EXPIRED_TIMEOUT = 10;
const int SESSION_EXPIRED_TIMEOUT = 17;

const int DEFAULT_TRAIN_LENGTH = 10;

typedef struct {
    int id;
    int length;
} TPR;

// Stores the most recent TPR
TPR tpr[N_TRAINS];

//Should be urgent? (using an urgent channel, every transition involving the channel has to be taken immediately, but no bounds on clocks are admitted)
chan train_ch[N_TRAINS];


</declaration>
	<template>
		<name x="5" y="5">CommunicationManager</name>
		<parameter>const int i</parameter>
		<declaration>// Local declarations for CommunicationManager
clock mute_timer, session_timer;

TPR last_tpr;

void initialize(){
    tpr[i].id = i;
    tpr[i].length = DEFAULT_TRAIN_LENGTH; 
}

void setTSAunknown(){}
void setTSAoccupied(){}
void removeAllRSA(){}

void resetTimers(){
    mute_timer = 0;
    session_timer = 0;
}

void receiveTPR_resetTimers(){
    last_tpr = tpr[i];
    resetTimers();
}

void receiveTPR_setTSAoccupied_resetTimers(){
    last_tpr = tpr[i];
    setTSAoccupied();
    resetTimers();
}

void setTSAunknown_removeAllRSA(){
    setTSAunknown();
    removeAllRSA();
}


</declaration>
		<location id="id0" x="671" y="8">
			<name x="629" y="16">WaitForTPR</name>
			<label kind="invariant" x="527" y="-51">mute_timer &lt;= MUTE_EXPIRED_TIMEOUT &amp;&amp; 
session_timer &lt;= SESSION_EXPIRED_TIMEOUT</label>
		</location>
		<location id="id1" x="671" y="263">
			<name x="603" y="229">WaitForReconnection</name>
			<label kind="invariant" x="340" y="255">session_timer &lt;= SESSION_EXPIRED_TIMEOUT</label>
		</location>
		<location id="id2" x="671" y="518">
			<name x="688" y="526">EXIT</name>
		</location>
		<location id="id3" x="671" y="-178">
			<name x="595" y="-212">ReceivingStandardTPR</name>
			<committed/>
		</location>
		<location id="id4" x="1147" y="263">
			<name x="1164" y="255">ReceivingReconnectionTPR</name>
			<urgent/>
		</location>
		<location id="id5" x="246" y="-51">
			<committed/>
		</location>
		<init ref="id5"/>
		<transition>
			<source ref="id5"/>
			<target ref="id0"/>
			<label kind="assignment" x="272" y="-68">initialize()</label>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id2"/>
			<label kind="guard" x="1156" y="357">tpr[i].id != i ||
tpr[i].length != DEFAULT_TRAIN_LENGTH</label>
			<label kind="assignment" x="1156" y="416">removeAllRSA()</label>
			<nail x="1147" y="518"/>
		</transition>
		<transition>
			<source ref="id4"/>
			<target ref="id0"/>
			<label kind="guard" x="1156" y="144">tpr[i].id == i &amp;&amp;
tpr[i].length == DEFAULT_TRAIN_LENGTH</label>
			<label kind="assignment" x="1156" y="102">receiveTPR_setTSAoccupied_resetTimers()</label>
			<nail x="1147" y="8"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id4"/>
			<label kind="guard" x="773" y="263">session_timer &lt;= SESSION_EXPIRED_TIMEOUT</label>
			<label kind="synchronisation" x="867" y="238">train_ch[i]?</label>
		</transition>
		<transition>
			<source ref="id3"/>
			<target ref="id0"/>
			<label kind="assignment" x="408" y="-110">receiveTPR_resetTimers()</label>
			<nail x="544" y="-178"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id3"/>
			<label kind="guard" x="756" y="-127">session_timer &lt;= SESSION_EXPIRED_TIMEOUT &amp;&amp;
mute_timer &lt;= MUTE_EXPIRED_TIMEOUT</label>
			<label kind="synchronisation" x="782" y="-153">train_ch[i]?</label>
			<nail x="790" y="-178"/>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id2"/>
			<label kind="guard" x="-76" y="187">session_timer &gt;= SESSION_EXPIRED_TIMEOUT</label>
			<label kind="assignment" x="25" y="212">setTSAunknown_removeAllRSA()</label>
			<nail x="246" y="8"/>
			<nail x="246" y="518"/>
		</transition>
		<transition>
			<source ref="id1"/>
			<target ref="id2"/>
			<label kind="guard" x="348" y="340">session_timer &gt;= SESSION_EXPIRED_TIMEOUT</label>
			<label kind="assignment" x="552" y="365">removeAllRSA()</label>
		</transition>
		<transition>
			<source ref="id0"/>
			<target ref="id1"/>
			<label kind="guard" x="348" y="59">mute_timer &gt;= MUTE_EXPIRED_TIMEOUT &amp;&amp; 
session_timer &lt;= SESSION_EXPIRED_TIMEOUT</label>
			<label kind="assignment" x="544" y="102">setTSAunknown()</label>
		</transition>
	</template>
	<template>
		<name>Train</name>
		<parameter>const int i</parameter>
		<declaration>// Local declarations for Train
const int TRAIN_MSG_PERIOD = 2;
const int IDLE_TIME = 5;

clock tpr_wait;

void setTPR_resetTPRwait(){
    tpr[i].id = i;
    tpr[i].length = DEFAULT_TRAIN_LENGTH;
    tpr_wait = 0;
}

void setWrongTPR_resetTPRwait(){
    tpr[i].id = i;
    tpr[i].length = DEFAULT_TRAIN_LENGTH - 1;
    tpr_wait = 0;
}</declaration>
		<location id="id6" x="-1572" y="42">
			<name x="-1564" y="17">WaitingPeriod</name>
			<label kind="invariant" x="-1555" y="51">tpr_wait &lt;= TRAIN_MSG_PERIOD</label>
		</location>
		<location id="id7" x="-1785" y="-246">
			<name x="-1827" y="-280">SendingTPR</name>
			<committed/>
		</location>
		<location id="id8" x="-1572" y="-246">
			<name x="-1631" y="-280">SendingWrongTPR</name>
			<committed/>
		</location>
		<location id="id9" x="-1368" y="-246">
			<name x="-1385" y="-280">Idling</name>
			<label kind="invariant" x="-1445" y="-255">tpr_wait &lt;= IDLE_TIME</label>
		</location>
		<branchpoint id="id10" x="-1572" y="-102">
		</branchpoint>
		<init ref="id6"/>
		<transition>
			<source ref="id6"/>
			<target ref="id10"/>
			<label kind="guard" x="-1657" y="-59">tpr_wait &gt;= TRAIN_MSG_PERIOD</label>
		</transition>
		<transition>
			<source ref="id9"/>
			<target ref="id6"/>
			<label kind="guard" x="-1360" y="-110">tpr_wait &gt;= IDLE_TIME</label>
			<label kind="assignment" x="-1360" y="-68">tpr_wait = 0</label>
			<nail x="-1368" y="42"/>
		</transition>
		<transition>
			<source ref="id8"/>
			<target ref="id6"/>
			<label kind="assignment" x="-1819" y="76">setWrongTPR_resetTPRwait()</label>
			<nail x="-1572" y="-306"/>
			<nail x="-1870" y="-306"/>
			<nail x="-1870" y="102"/>
			<nail x="-1572" y="102"/>
		</transition>
		<transition>
			<source ref="id7"/>
			<target ref="id6"/>
			<label kind="assignment" x="-1768" y="17">setTPR_resetTPRwait()</label>
			<nail x="-1785" y="42"/>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id9"/>
			<label kind="assignment" x="-1487" y="-195">tpr_wait = 0</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id8"/>
			<label kind="synchronisation" x="-1606" y="-195">train_ch[i]!</label>
		</transition>
		<transition>
			<source ref="id10"/>
			<target ref="id7"/>
			<label kind="synchronisation" x="-1734" y="-195">train_ch[i]!</label>
		</transition>
	</template>
	<system>T0 = Train(0);
T1 = Train(1);

C0 = CommunicationManager(0);
C1 = CommunicationManager(1);

system T0, C0, T1, C1;
    </system>
	<queries>
		<query>
			<formula>A&lt;&gt; C0.WaitForReconnection</formula>
			<comment></comment>
		</query>
	</queries>
</nta>
